<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd 
               http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd ">

	<!-- New in Spring Security 3.1 -->
	<!-- <http pattern="/css/**" security="none"/> -->

	<!-- <security:http use-expressions="true"> -->
	<security:http pattern="/start" security="none" />
	<security:http auto-config="false" use-expressions="true"
		entry-point-ref="loginUrlAuthenticationEntryPoint">
		<security:intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/teacher/**"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_TEACHER')" />
		<security:intercept-url pattern="/student/**"
			access="hasRole('ROLE_STUDENT')" />
		<security:intercept-url pattern="/api2/**"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_TEACHER', 'ROLE_STUDENT')" />
		<security:custom-filter position="FORM_LOGIN_FILTER"
			ref="securityFilter" />
		<security:logout logout-url="/j_spring_security_logout"
			logout-success-url="/home" delete-cookies="true" />
		<security:session-management invalid-session-url="/user-login-page" session-authentication-error-url="/user-login-page"> 
			<security:concurrency-control max-sessions="1" expired-url="/home" error-if-maximum-exceeded="false"/> 
		</security:session-management>
	</security:http>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="userDetailsServiceImpl">
			<security:password-encoder hash="sha">
				<security:salt-source user-property="username" />
			</security:password-encoder>
			<!-- <security:jdbc-user-service data-source-ref="dataSource" users-by-username-query=" 
				select username,password, enabled from et_user where username=?" authorities-by-username-query=" 
				select u.username, r.authority from et_user u, et_role r, et_r_user_role 
				u2r where u.id = u2r.user_id and r.id = u2r.role_id and u.username =? " /> -->
		</security:authentication-provider>

	</security:authentication-manager>
	<!-- <security:authentication-provider user-service-ref="userDetailsServiceImpl"> 
		<security:password-encoder hash="sha"> <security:salt-source user-property="username" 
		/> </security:password-encoder> </security:authentication-provider> -->
	<bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/user-login-page" />
	</bean>
	<!-- <bean id="userDetailsServiceImpl" class="com.extr.security.UserDetailsServiceImpl"> 
		<property name="userService" ref="userService"/> </bean> -->
	<bean id="securityFilter" class="com.extr.security.filter.AuthenticationFilter">
		<!-- <property name="defaultTargetUrl" value="home" /> -->
		<property name="filterProcessesUrl" value="/j_spring_security_check" />
		<property name="authenticationManager" ref="authenticationManager" />

		<property name="authenticationFailureHandler">
			<bean
				class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<property name="defaultFailureUrl" value="/user-login-page?result=failed" />
			</bean>
		</property>

		<property name="authenticationSuccessHandler">
			<bean class="com.extr.security.handler.ExtrAuthenticationSuccessHandler">
				<property name="defaultTargetUrl" value="/home" />
			</bean>
		</property>
	</bean>
</beans>